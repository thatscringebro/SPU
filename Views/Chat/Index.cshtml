@model SPU.Domain.Entites.Utilisateur
@using SPU.Domain.Entites
@using SPU.Domain
@using Microsoft.EntityFrameworkCore 
@{
    ViewData["Title"] = "Home Page";
    SpuContext context = new SpuContext();
    Coordonnateur coordo = context.Coordonnateurs.FirstOrDefault(x => x.UtilisateurId == Model.Id);
    Enseignant ens = context.Enseignants.FirstOrDefault(x => x.UtilisateurId == Model.Id); 
    Stagiaire stag = context.Stagiaires.FirstOrDefault(x => x.UtilisateurId == Model.Id);
    MDS mds = context.MDS.FirstOrDefault(x => x.UtilisateurId == Model.Id);
}

<link rel="stylesheet" href="~/css/chat.css" asp-append-version="true" />

<div id="container">
	@if(stag != null) {
      <div class="main noaside">
        <ul id="@stag.ChatId" class="chat">
          @{
      List<Message> messages = context.Message.Include(x => x.utilisateur).Where(x => x.ChatId == stag.ChatId).ToList();
      }
          @foreach (var message in messages)
          {
              <li class="@((message.UtilisateurId == Model.Id) ? "me" : "you")">
                  <div class="entete">
                      <h2>@message.utilisateur.NomComplet</h2>
                      <h3>@message.DateHeure.ToLocalTime().ToString("h:mmtt, MMM d")</h3>
                  </div>
                  <div class="triangle"></div>
                  <div class="message">
                      @message.message
                  </div>
              </li>
          }
        </ul>
        <footer>
            @{
                string idMessageInput = stag.ChatId.ToString() + "messageInput";
                string idSendButton = stag.ChatId.ToString() + "sendButton";
            }
            <input type="text" placeholder="Votre message ici" id="@idMessageInput" class="inputChat" onkeypress="handleKeyPressInput(event, '@idSendButton')"/>
            <a id="@idSendButton" onclick="sendMessage('@Model.Id', document.getElementById('@idMessageInput').value, '@stag.ChatId')">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                     class="bi bi-send" viewBox="0 0 16 16">
                    <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576zm6.787-8.201L1.591 6.602l4.339 2.76z"/>
                </svg>
            </a>
        </footer>
    </div>
  }
  else if (ens != null){
<aside>
        <header>
            <input type="text" placeholder="search" id="searchInput">
        </header>
        <ul id="listChat">
      @{
        List<Chat> chats = context.Chats.Where(x => x.EnseignantId == ens.Id).ToList();
      }
            @foreach (var chat in chats)
            {
                var stagTemp = context.Stagiaires.FirstOrDefault(x => x.ChatId == chat.Id);
                string nomEtudiant = context.Utilisateurs.FirstOrDefault(x => x.Id == stagTemp.UtilisateurId).NomComplet;
                string idSelect = chat.Id.ToString() + "Select";
                <li onclick="setActiveChat('@chat.Id')" class="chatSelect" id="@idSelect">
                    <div>
                        <h2>@nomEtudiant</h2>
                    </div>
                </li>
            }
        </ul>
    	</aside>
  @foreach (var chat in chats) {
      <div class="main"><h1>Veuillez choisir un chat</h1></div>
  <div class="main hidden">
        <ul id="@chat.Id" class="chat">
      @{
            List<Message> messages = context.Message.Include(x => x.utilisateur).Where(x => x.ChatId == chat.Id).ToList();
      }
            @foreach (var message in messages)
            {
                <li class="@((message.UtilisateurId == Model.Id) ? "me" : "you")">
                    <div class="entete">
                        <h2>@message.utilisateur.NomComplet</h2>
                        <h3>@message.DateHeure.ToLocalTime().ToString("h:mmtt, MMM d")</h3>
                    </div>
                    <div class="triangle"></div>
                    <div class="message">
                        @message.message
                    </div>
                </li>
            }
        </ul>
        <footer>
            @{
                string idMessageInput = chat.Id.ToString() + "messageInput";
                string idSendButton = chat.Id.ToString() + "sendButton";
            }
            <input type="text" placeholder="Votre message ici" id="@idMessageInput" class="inputChat" onkeypress="handleKeyPressInput(event, '@idSendButton')"/>
            <a id="@idSendButton" onclick="sendMessage('@Model.Id', document.getElementById('@idMessageInput').value, '@chat.Id')">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                     class="bi bi-send" viewBox="0 0 16 16">
                    <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576zm6.787-8.201L1.591 6.602l4.339 2.76z"/>
                </svg>
            </a>
        </footer>
    </div>
  }
  }
  else if (coordo != null){
        <aside>
        <header>
            <input type="text" placeholder="search" id="searchInput">
        </header>
        <ul id="listChat">
      @{
        List<Chat> chats = context.Chats.ToList();
      }
            @foreach (var chat in chats)
            {
                var stagTemp = context.Stagiaires.FirstOrDefault(x => x.ChatId == chat.Id);
                string nomEtudiant = context.Utilisateurs.FirstOrDefault(x => x.Id == stagTemp.UtilisateurId).NomComplet;
                string idSelect = chat.Id.ToString() + "Select";
                <li onclick="setActiveChat('@chat.Id')" class="chatSelect" id="@idSelect">
                    <div>
                        <h2>@nomEtudiant</h2>
                    </div>
                </li>
            }
        </ul>
    	</aside>
  @foreach (var chat in chats) {
      <div class="main"><h1>Veuillez choisir un chat</h1></div>
      <div class="main hidden">
        <ul id="@chat.Id" class="chat">
      @{
      List<Message> messages = context.Message.Include(x => x.utilisateur).Where(x => x.ChatId == chat.Id).ToList();
      }
            @foreach (var message in messages)
            {
                <li class="@((message.UtilisateurId == Model.Id) ? "me" : "you")">
                    <div class="entete">
                        <h2>@message.utilisateur.NomComplet</h2>
                        <h3>@message.DateHeure.ToLocalTime().ToString("h:mmtt, MMM d")</h3>
                    </div>
                    <div class="triangle"></div>
                    <div class="message">
                        @message.message
                    </div>
                </li>
            }
        </ul>
        <footer>
            @{
                string idMessageInput = chat.Id.ToString() + "messageInput";
                string idSendButton = chat.Id.ToString() + "sendButton";
            }
            <input type="text" placeholder="Votre message ici" id="@idMessageInput" class="inputChat" onkeypress="handleKeyPressInput(event, '@idSendButton')" />
            <a id="@idSendButton" onclick="sendMessage('@Model.Id', document.getElementById('@idMessageInput').value, '@chat.Id')">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                     class="bi bi-send" viewBox="0 0 16 16">
                    <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576zm6.787-8.201L1.591 6.602l4.339 2.76z"/>
                </svg>
            </a>
        </footer>
    </div>
  }
  }
  else {
    <h1>Aucun utilisateur n'a été trouvé</h1>
	}
</div>

<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", () => {
      $(".chat").scrollTop($(".chat")[0].scrollHeight);


      const searchInput = document.getElementById('searchInput');
      const listChat = document.getElementById('listChat');
      const chatItems = listChat.getElementsByTagName('li');

      searchInput.addEventListener('input', function () {
          const searchTerm = searchInput.value.toLowerCase();
          for (let i = 0; i < chatItems.length; i++) {
              const chatItem = chatItems[i];
              const chatId = chatItem.querySelector('h2').textContent.toLowerCase();
              if (chatId.includes(searchTerm)) {
                  chatItem.style.display = 'block';
              } else {
                  chatItem.style.display = 'none';
              }
          }
      });
  });

  "use strict";

  var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

  connection.on("ReceiveMessage", function (user, room, message, username, date) {
    var li = document.createElement("li");
    if(user == '@Model.Id')
      li.classList.add("me");
    else
      li.classList.add("you");
    document.getElementById(room).appendChild(li);
    
    li.innerHTML = "<div class=\"entete\"><h2>"+ username + "&nbsp;</h2><h3>" + date + "</h3></div><div class=\"triangle\"></div><div class=\"message\">"+ message + "</div>";

    $(".chat").scrollTop($(".chat")[0].scrollHeight);
  });

  connection.start().then(function () {
  }).catch(function (err) {
    return console.error(err.toString());
  }); 

  function sendMessage(user, message, room){
    if(message != null && message != ""){
      connection.invoke("SendMessage", user, room, message).catch(function (err) {
        return console.error(err.toString());
      }); 
    }

    $('.inputChat').val(''); 
  } 

  function setActiveChat(chatId) {
      $(".main").addClass("hidden");
      $("#" + chatId).closest('div').removeClass("hidden");

      $(".chatSelect").removeClass("activeChat");
      $("#" + chatId + "Select").addClass("activeChat");
  }

  function handleKeyPressInput(event, buttonId) {
    if (event.key === "Enter") {
        document.getElementById(buttonId).click(); 
    }
  }
</script>
 
